library(MASS)
#E-M estimators for MVN, 5 class, 20000 gene. 
C=100

#---------------------------------------------Expectation-------------------------------------------#
norm=function(para,x){
  pdf=exp(C+log((det(para[[2]]))^(-1/2))-0.5*t(x-para[[1]])%*%solve(para[[2]])%*%(x-para[[1]]))
  return(pdf)
}

expectation <- function(sample,p,para)
{ 
  p_e=matrix(0,length(sample[,1]),5)
  for (i in 1:length(sample[,1])){
  t=sapply(para,norm,x=sample[i,])
  p_e[i,]=t*p/sum(t*p)
  }
  return(p_e)
}

#----------------------------------Maximization-------------------------------# 

maximization <- function(sample,epart){
  # estimate p
  p_temp <- apply(epart,2,sum)/sum(epart)
  # estimate u and sigma
  #u_temp <-t(t(epart)%*%sample/apply(sample,2,sum))
  d=apply(epart,2,sum)
  para_temp=list()
  for(i in 1:length(epart[1,])){
    u=t(sample)%*%epart[,i]/d[i]
    sigma=matrix(0,length(sample[1,]),length(sample[1,]))
    for(j in 1:length(sample[,1])){
      sigma=sigma+epart[j,i]*(sample[j,]-u)%*%t((sample[j,]-u))
    }
    sigma=sigma/d[i]
    para_temp=append(para_temp,list(list(u,sigma)))
  }
  return(list(p_temp,para_temp))   
}

EM <- function(sample,p_inits,para_inits,maxit=5000,tol=10^-4)
{
  # Estimation of parameter(Initial)
  flag <- 0
  p_cur <- p_inits; para_cur <- para_inits
  
  # Iterate between expectation and maximization parts
  
  for(i in 1:maxit){
    #cur <- c(p_cur,a1_cur,a2_cur)
    new <- maximization(sample,expectation(sample,p_cur,para_cur))
    #new <- maximization(sample, p_cur, a1_cur, a2_cur)
    p_new <- new[[1]]; para_new=new[[2]]
    #new_step <- c(p_new,a1_new,a2_new)
    
    # Stop iteration if the difference between the current and new estimates is less than a tolerance level
    if( all(abs(p_cur - p_new) < tol) ){ flag <- 1; break}
    
    
    # Otherwise continue iteration
    p_cur <- p_new; para_cur <- para_new
  }
  if(!flag) warning("Didn't converge\n")
  
  return(expectation(sample,p_new,para_new))
}


data1=read.csv("MVN.csv",header=T)
data1=as.matrix(data1)
sample1=data1[,1:100] #when n=100, expectation works
pint=rep(0.2,5)
set.seed(1234)
n=100
para1=list(sample(c(0.8,0.9,1),n,replace = T),diag(0.2,n,n))
para2=list(sample(c(3.5,4,4.5,5,5.5,6,6.5),n,replace=T),diag(2,n,n))
para3=list(sample(c(8,9,10,11,12),n,replace = T),diag(4,n,n))
para4=list(sample(c(17,19,21,23,25),n,replace = T),diag(8,n,n))
para5=list(sample(c(30,31,32,33,34,35),n,replace = T),diag(12,n,n))
paraint=list(para1,para2,para3,para4,para5)
expt_p=EM(sample1,pint,paraint)
pred_l=apply(expt_p,1,which.max)
length(which(pred_l!=l))/length(l)#check miss classification rate
